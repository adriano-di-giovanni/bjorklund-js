{"version":3,"sources":["bjorklund.min.js"],"names":["root","factory","define","amd","bjorklund","exports","module","this","euclid","a","b","qs","rs","l","q","floor","r","push","build","g0","g1","gs","j","n","k","m","Math"],"mappings":"CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IACzCD,OAAO,WAEL,MAAOF,GAAKI,UAAYH,MAEE,gBAAZI,SAChBC,OAAOD,QAAUJ,IAEjBD,EAAKI,UAAYH,KAEnBM,KAAM,WAKN,QAASC,GAAOC,EAAGC,EAAGC,EAAIC,EAAIC,GAE5BA,EAAIA,GAAK,CAET,IACEC,GAAIC,EAAMN,EAAIC,GACdM,EAAIP,EAAIC,CAKV,OAHAC,GAAGM,KAAKH,GACRF,EAAGK,KAAKD,GAEDA,EAAIR,EAAOE,EAAGM,EAAGL,EAAIC,EAAIC,EAAI,GAAKA,EAG3C,QAASK,GAAMP,EAAIC,EAAIC,EAAGM,EAAIC,EAAIC,GAEhC,GACEC,GAAGR,EAAGE,CAER,QAAQH,GACN,IAAK,GACHQ,EAAGJ,KAAKE,EACR,MACF,KAAK,GACHE,EAAGJ,KAAKG,EACR,MACF,SAIE,IAHAN,EAAIH,EAAGE,GACPG,EAAIJ,EAAGC,GAEFS,EAAI,EAAOR,EAAJQ,EAAOA,IACjBJ,EAAMP,EAAIC,EAAIC,EAAI,EAAGM,EAAIC,EAAIC,EAErB,KAANL,GACFE,EAAMP,EAAIC,EAAIC,EAAI,EAAGM,EAAIC,EAAIC,IAKrC,QAASjB,GAAUmB,EAAGC,GAEpB,GAOEX,GANAY,EAAIF,EAAIC,EAERb,KACAC,GAAOY,GACPH,IAYF,OARII,GAAID,GACNX,EAAIL,EAAOiB,EAAGD,EAAGb,EAAIC,GACrBM,EAAMP,EAAIC,EAAIC,EAAG,EAAG,EAAGQ,KAEvBR,EAAIL,EAAOgB,EAAGC,EAAGd,EAAIC,GACrBM,EAAMP,EAAIC,EAAIC,EAAG,EAAG,EAAGQ,IAGlBA,EA7DT,GACEN,GAAQW,KAAKX,KA+Df,OAAOX","file":"bjorklund.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(function () {\n      /* eslint no-return-assign: 0 */\n      return root.bjorklund = factory();\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.bjorklund = factory();\n  }\n}(this, function () {\n\n  var\n    floor = Math.floor;\n\n  function euclid(a, b, qs, rs, l) {\n\n    l = l || 0;\n\n    var\n      q = floor(a / b),\n      r = a % b;\n\n    qs.push(q);\n    rs.push(r);\n\n    return r ? euclid(b, r, qs, rs, l + 1) : l;\n  }\n\n  function build(qs, rs, l, g0, g1, gs) {\n\n    var\n      j, q, r;\n\n    switch (l) {\n      case -1:\n        gs.push(g0);\n        break;\n      case -2:\n        gs.push(g1);\n        break;\n      default:\n        q = qs[l];\n        r = rs[l];\n\n        for (j = 0; j < q; j++) {\n          build(qs, rs, l - 1, g0, g1, gs);\n        }\n        if (r !== 0) {\n          build(qs, rs, l - 2, g0, g1, gs);\n        }\n    }\n  }\n\n  function bjorklund(n, k) {\n\n    var\n      m = n - k,\n\n      qs = [],\n      rs = [ k ],\n      gs = [],\n\n      l;\n\n    if (m > k) {\n      l = euclid(m, k, qs, rs);\n      build(qs, rs, l, 0, 1, gs);\n    } else {\n      l = euclid(k, m, qs, rs);\n      build(qs, rs, l, 1, 0, gs);\n    }\n\n    return gs;\n  }\n\n  return bjorklund;\n}));\n"],"sourceRoot":"/source/"}